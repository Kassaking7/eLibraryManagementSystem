<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.backend.mapper.BookMapper">
    <parameterMap type="java.util.Map" id ="borrowBookMap">
        <parameter property="user_id" mode="IN" jdbcType="BIGINT" />
        <parameter property="ISBN" mode="IN" jdbcType="VARCHAR" />
        <parameter property="enough_credit" mode="OUT" jdbcType="BOOLEAN" />
        <parameter property="copy_available" mode="OUT" jdbcType="BOOLEAN" />
    </parameterMap>
    <parameterMap type="java.util.Map" id ="returnBookMap">
        <parameter property="user_id" mode="IN" jdbcType="BIGINT" />
        <parameter property="ISBN" mode="IN" jdbcType="VARCHAR" />
        <parameter property="copy_ID" mode="IN" jdbcType="BIGINT" />
    </parameterMap>
    <select id="ListBook" resultType="Book">
        SELECT * FROM Book
    </select>

    <select id="ListISBNTag" resultType="BookISBNTagPair">
        SELECT B.ISBN AS ISBN, B.title AS title,MIN(tag_name) AS tags
        FROM Book AS B
        INNER JOIN Has_tag AS H ON B.ISBN = H.ISBN
        GROUP BY B.ISBN
    </select>

    <select id="findBookByISBN" resultType="Book">
        SELECT  * FROM Book where ISBN = #{ISBN}
    </select>

    <select id="findBookInfo" resultType="BookInfo">
        {call show_detailed_book_info(#{ISBN})}
    </select>

    <update id="borrowBook" statementType="CALLABLE"  parameterMap="borrowBookMap">
        {call borrow_via_guest(?,?,?,?)}
    </update>

    <select id="findBookAuthor" resultType="Book">
        SELECT  * FROM Book INNER JOIN Author AS a ON a.where ISBN = #{ISBN}
    </select>


    <insert id="insertBook" parameterType="com.example.backend.entity.Book"
            keyProperty="id" useGeneratedKeys="true">
        INSERT INTO Book(
           ISBN, title, pages, descrpition, publisher_ID, publication_year
        )
        VALUES(
        #{ISBN}, #{title},#{pages},#{descrpition},#{publisher_ID},#{publication_year}
        )
    </insert>

    <update id="returnBook" statementType="CALLABLE" parameterMap="returnBookMap">
        {call book_return(?,?,?)}
    </update>
    <update id="Update" parameterType="com.example.backend.entity.Book">
        update Book
        <set>
            <if test="ISBN != null">ISBN=#{ISBN},</if>
            <if test="title != null">title=#{title},</if>
            <if test="pages!= null">pages=#{pages}</if>
            <if test="descrpition!= null">descrpition=#{descrpition}</if>
            <if test="publisher_ID!= null">publisher_ID=#{publisher_ID}</if>
            <if test="publication_year!= null">publication_year=#{publication_year}</if>
        </set>
        where id=#{id}
    </update>

    <delete id="delete" parameterType="com.example.backend.entity.Book">
        delete from Book where id=#{id}
    </delete>
</mapper>
