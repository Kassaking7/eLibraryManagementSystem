<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.backend.mapper.CopyMapper">
    <resultMap id="result" type="com.example.backend.entity.Copy">
        <result property="ISBN" column="ISBN" />
        <result property="copy_ID" column="copy_ID" />
        <result property="availability" column="availability" />
        <result property="bookshelf_ID" column="bookshelf_ID" />
    </resultMap>
    <parameterMap type="java.util.Map" id ="BorrowViaGuestMap">
        <parameter property="user_id" mode="IN" jdbcType="BIGINT" />
        <parameter property="ISBN" mode="IN" jdbcType="VARCHAR" />
        <parameter property="enough_credit" mode="OUT" jdbcType="BOOLEAN" />
        <parameter property="copy_available" mode="OUT" jdbcType="BOOLEAN" />
    </parameterMap>
    <parameterMap type="java.util.Map" id ="BorrowViaAdminMap">
        <parameter property="user_id" mode="IN" jdbcType="BIGINT" />
        <parameter property="ISBN" mode="IN" jdbcType="VARCHAR" />
        <parameter property="copy_ID" mode="IN" jdbcType="BIGINT" />
        <parameter property="copy_available" mode="OUT" jdbcType="BOOLEAN" />
    </parameterMap>


    <select id="findCopyByISBNAndCopyId" resultType="Copy">
        SELECT * FROM Copy WHERE Copy.ISBN = #{ISBN} AND Copy.copy_ID = #{copyID}
    </select>

    <select id="listCopiesByISBN" resultType="Copy">
        SELECT * FROM Copy WHERE Copy.ISBN = #{ISBN}
    </select>

    <insert id="insertCopy" parameterType="com.example.backend.entity.Copy"
            keyProperty="ISBN" useGeneratedKeys="true">
        INSERT INTO Copy(ISBN, copyID, availability, bookshelf_ID)
        VALUES(#{ISBN}, #{copyID}, #{availability}, #{bookshelf_ID})
    </insert>

    <delete id="delete" parameterType="com.example.backend.entity.Copy">
        DELETE FROM Copy WHERE ISBN = #{ISBN} AND copy_ID = #{copyID}
    </delete>

    <update id="update" parameterType="com.example.backend.entity.Copy">
        UPDATE Copy
        <set>
            <if test="ISBN != null">ISBN = #{ISBN}, </if>
            <if test="copy_ID != null">copy_ID = #{copyID}, </if>
            <if test="availability != null">availability=#{availability} </if>
            <if test="bookshelf_ID != null">bookshelf_ID=#{bookshelfID} </if>
        </set>
        where id=#{id}
    </update>

    <select id="borrowBookWithKnownBook" statementType="CALLABLE"  parameterMap="BorrowViaGuestMap">
        {call borrow_via_guest(?,?,?,?)}
    </select>

    <select id="borrowBookWithKnownCopy" statementType="CALLABLE"  parameterMap="BorrowViaAdminMap">
        {call borrow_via_guest(?,?,?,?,?)}
    </select>



    public int borrowBookWithKnownBook(String ISBN, long userID);


    <insert id="insertAdministrator" parameterType="com.example.backend.entity.Administrator"
            keyProperty="id" useGeneratedKeys="true">
        INSERT INTO Administrator(
        id,can_edit_books,can_host_event
        )
        VALUES(
        #{id},#{can_edit_books},#{can_host_event}
        )
    </insert>

    <update id="Update" parameterType="com.example.backend.entity.Administrator">
        update Administrator
        <set>
            <if test="ID != null">ID=#{ID},</if>
            <if test="can_edit_books != null">can_edit_books=#{can_edit_books},</if>
            <if test="can_host_event!= null">can_host_event=#{can_host_event}</if>
        </set>
        where id=#{id}
    </update>

    <delete id="delete" parameterType="com.example.backend.entity.Administrator">
        delete from Administrator where id=#{id}
    </delete>
</mapper>
